/*! jquery-xjzTable 0.2.1 2017-05-18 05:26:04 
https://xujunzhou.github.io/jquery-xjzTable/
*/
!
function(a, b, c) {
    var d = function(b, c) {
        var e = this,
        f = null,
        g = null,
        h = null,
        i = null,
        j = null,
        k = null,
        l = d.options.lang;
        c.lang && d.lang[c.lang] && (l = c.lang),
        f = a.extend({},
        d.options.ajax, c.ajax),
        null !== c.sort && (j = a.extend({},
        d.options.sort, c.sort)),
        null !== c.paging && (g = a.extend({},
        d.options.paging, d.lang[l].pagingText), g = a.extend(!0, g, d.options.paging, c.paging), null !== c.pagingInfo && (i = a.extend({},
        d.options.pagingInfo, c.pagingInfo), i.pagingInfoText = d.lang[l].pagingInfoText), null !== c.pageLength && (h = a.extend(!0, {},
        d.options.pageLength, c.pageLength), h.pageLengthText = d.lang[l].pageLengthText)),
        k = a.extend({},
        d.options.masklayer, c.masklayer),
        c.defColumns && a.each(c.columns,
        function(b, d) {
            c.columns[b] = a.extend({},
            c.defColumns, d)
        }),
        c.emptyText = d.lang[l].emptyText,
        e.options = a.extend({},
        d.options, c, {
            ajax: f,
            paging: g,
            pagingInfo: i,
            pageLength: h,
            sort: j,
            masklayer: k
        }),
        e.$table = b,
        e._$table = b.clone(!0, !0),
        e.initWidget(),
        null !== c.paging && (e.bindPagingEvent(), null !== c.pageLength && e.bindPageLengthEvent()),
        null !== c.sort && e.bindSortEvent(),
        a.each(c.columns,
        function(a, b) {
            if (0 === b.tooltip || b.tooltip) return e.bindTooltipEvent(),
            !1
        }),
        e.totalPages = 0,
        e.currentPage = g ? g.startPage: 1,
        e.limit = g ? +e.options.defaultSize: null,
        e.loadData(e.currentPage)
    };
    d.prototype = {
        initWidget: function() {
            var b = this,
            c = b.options,
            c_opt=c;
            d = c.columns,
            e = (c.sort, b.$table),
            $table_tt=b.$table;
            f = e.children("thead");
            if (b.$container = a('<div class="' + c.xjzTableWrapClass + '"></div>'), b.$pagingInfo = a("<div></div>"), b.$pageLength = a("<div></div>"), b.$paging = a("<div></div>"), f.length > 0) f.find("th").length != d.length && a.error("$table中的列数和columns中列数不匹配!");
            else {
                f = a("<thead></thead>");
                var g = a("<tr></tr>");
                var chkbox_b=false;
                a.each(d,
                function(b, c) {
                    var d = a("<th></th>"),
                    e = String(c.title),
                    f = e.match(/>/g),
                    h = e.match(/>/g);
                	/*if(c_opt.multiselect == true && chkbox_b == false){
                		chkbox_b = true;
                		var ddd = a("<th></th>");
                		var chkbox='<input type="checkbox">';
                		ddd.append(a(chkbox)).append("全选");
                		g.append(ddd);
                	}*/
                    f && h && f.length == h.length ? d.append(a(e)) : d.text(e);
                    if(c_opt.multiselect == true && chkbox_b == false && b==0 ){
                    	chkbox_b = true;
                    	d.append("全选");
                    	d.on("change",function(e1){
                    		if($(this).find("input").prop('checked')){
                    			var $oo = $table_tt.find("tbody").find("tr").find("td").find("input");
                    			$oo.prop("checked",true);
                    		}else{
                    			var $oo = $table_tt.find("tbody").find("tr").find("td").find("input");
                    			$oo.prop("checked",false);
                    		}
                    	});
                    }
                    var i = c.width;
                    i && (i.toString().indexOf("%") ? d.css("width", i) : d.css("width", parseFloat(i) + "px")),
                    g.append(d)
                }),
                f.append(g),
                e.append(f),
                "function" == typeof c.theadCallback && c.theadCallback.call(f, c)
            }
            a.each(d,
            function(a, b) {
                var c = f.find("th:eq(" + a + ")"),
                d = b.width;
                d && (d.toString().indexOf("%") ? c.css("width", d) : c.css("width", parseFloat(d.toString()) + "px")),
                b.textAlign && c.css("text-align", b.textAlign),
                b.verticalAlign && c.css("vertical-align", b.verticalAlign)
            });
            var h = !1;
            if (a.each(d,
            function(a, b) {
                "asc" != b.sort && "desc" != b.sort || (h ? b.sort && delete b.sort: b.sort && (h = !0))
            }), c.paging && c.pagingInfo ? (b.$pagingInfo.addClass(c.pagingInfo.wrapClass), b.$pagingInfo.append('<span class="' + c.pagingInfo.pagingInfoClass + '"></span>')) : b.$pagingInfo = null, c.paging && c.pageLength) {
                b.$pageLength.addClass(c.pageLength.wrapClass);
                var i = c.pageLength,
                j = i.pageLengthText.split("{{select}}"),
                k = a("<span>" + j[0] + "</span>"),
                l = a("<span>" + j[1] + "</span>"),
                m = a('<select class="' + i.pageLengthClass + '"></select>');
                0 == a.map(i.data,
                function(a) {
                    if (a == c.defaultSize) return a
                }).length && i.data.push(c.defaultSize),
                i.data.sort(function(a, b) {
                    return a - b
                });
                for (var n = 0,
                o = i.data.length; n < o; n++) i.data[n] == c.defaultSize ? m.append("<option selected>" + i.data[n] + "</option>") : m.append("<option>" + i.data[n] + "</option>");
                b.$pageLength.append(k),
                b.$pageLength.append(m),
                b.$pageLength.append(l)
            } else b.$pageLength = null;
            c.paging ? (b.$paging.addClass(c.paging.wrapClass), b.$paging.append('<ul class="' + c.paging.pagingClass + '"></ul>')) : b.$paging = null,
            b.$table.after(b.$container),
            b.createWidgetDom(b.$container, b.$table, b.$pagingInfo, b.$pageLength, b.$paging),
            b.$table.addClass("xjzTable"),
            b.$containerMasklayer = a('<div class="' + c.masklayer.containerMasklayerClass + '"></div>'),
            b.$tableMasklayer = a('<div class="' + c.masklayer.tableMasklayerClass + '"></div>'),
            b.$containerMasklayer.append(b.$tableMasklayer),
            b.$container.append(b.$containerMasklayer)
        },
        createWidgetDom: function(b, c, d, e, f) {
            for (var g = [b], h = b, i = ["T", "I", "L", "P"], j = this.options.dom, k = 0, l = j.length; k < l; k++) {
                if ("<" == j.charAt(k)) {
                    var m = a("<div></div>");
                    g[g.length - 1].append(m),
                    h = m;
                    var n = j.indexOf(">", k);
                    j.slice(k + 1, n).indexOf("<") != -1 && g.push(m)
                }
                if (">" == j.charAt(k)) {
                    h = g[g.length - 1];
                    for (var o = j.slice(k + 1, j.indexOf("<", k)), p = 0, q = o.length; p < q; p++) if (">" == o[p]) g.pop(),
                    h = g[g.length - 1];
                    else if (i.join(",").indexOf(o.charAt(p)) != -1) {
                        var r = o.charAt(p);
                        switch (r) {
                        case "T":
                            h.append(c);
                            break;
                        case "I":
                            d && h.append(d);
                            break;
                        case "L":
                            e && h.append(e);
                            break;
                        case "P":
                            f && h.append(f)
                        }
                    }
                    k += o.length
                }
                if ("'" == j.charAt(k) || '"' == j.charAt(k)) {
                    var s = "'" == j.charAt(k) ? "'": '"',
                    t = j.indexOf(s, k + 1),
                    u = j.slice(k + 1, t);
                    k = t,
                    h.addClass(u)
                }
                if (i.join(",").indexOf(j.charAt(k)) != -1) {
                    var r = j.charAt(k);
                    switch (r) {
                    case "T":
                        h.append(c);
                        break;
                    case "I":
                        d && h.append(d);
                        break;
                    case "L":
                        e && h.append(e);
                        break;
                    case "P":
                        f && h.append(f)
                    }
                }
            }
        },
        loadData: function(b, c) {
            var d = this,
            e = d.options,
            f = e.data;
            a.isArray(f) ? d.nativeLoad(b) : d.ajaxLoad(b, c)
        },
        nativeLoad: function(b) {
            var c, d, e = this,
            f = e.options,
            g = f.columns,
            h = f.data.concat([]),
            i = [];
            if (e.currentPage = b, "function" == typeof f.dataFilter && (resultData = f.dataFilter.call(e.$table, h, f), h = resultData && a.isArray(resultData) ? resultData: h), e.total = h.length, e.nativeLoad.createComparisonFunction = function(a, b) {
                return function(c, d) {
                    var e = c[a],
                    f = d[a];
                    return e < f ? "asc" == b ? -1 : 1 : e > f ? "asc" == b ? 1 : -1 : 0
                }
            },
            a.each(g,
            function(a, b) {
                "string" == typeof b.sort && b.field && h.sort(e.nativeLoad.createComparisonFunction(b.field, b.sort))
            }), e.limit ? (c = (b - 1) * e.limit, d = c + e.limit - 1, i = h.slice(c, d + 1)) : i = h, e.renderTable(i), f.paging) {
                var j = h.length,
                k = Math.ceil( + j / e.limit);
                e.updataPaging(k, b),
                f.pagingInfo && e.updatePagingInfo(b, e.limit, i, j)
            }
        },
        ajaxLoad: function(b, c) {
            var d = this,
            e = d.options,
            f = e.columns,
            g = e.ajax,
            h = {};
            d.currentPage = b,
            d.limit && (h[g.pagingText] = b, h[g.startText] = (b - 1) * d.limit, h[g.limitText] = d.limit),
            e.sort && (h.sort = [], a.each(f,
            function(a, b) {
                b.sort && b.field && b.sort !== !0 && h.sort.push({
                    field: b.field,
                    type: b.sort
                })
            }), h.sort = JSON.stringify(h.sort)),
            g.data = a.extend(g.data, h),
            g.context = d,
            g.success = d.ajaxSuccess,
            "function" == typeof g.sendCallback && (e = g.sendCallback.call(d.$table, e) || e),
            g.masklayer && c !== !1 && (d.$containerMasklayer.css({
                height: d.$container.outerHeight() + "px",
                display: "block"
            }), d.$tableMasklayer.css({
                top: d.$table.position().top + "px",
                height: d.$table.outerHeight() + "px"
            })),
            a.ajax(g)
        },
        ajaxSuccess: function(b) {
            var c = this,
            d = c.options,
            e = d.ajax.dataSrc,
            f = [],
            g = d.ajax.totalSrc,
            h = 0;
            if (c.$containerMasklayer.css("display", "none"), "function" == typeof d.ajax.successCallback && (b = d.ajax.successCallback.call(c.$table, b, d) || b), "string" == typeof e) {
                f = b;
                for (var i = e.split("."), j = 0; j < i.length; j++) f = f[i[j]]
            } else "function" == typeof e && (f = e(b, d));
            if (f && a.isArray(f) || (f = []), c.renderTable(f), "string" == typeof g) {
                h = b;
                for (var i = g.split("."), j = 0; j < i.length; j++) h = h[i[j]]
            } else "function" == typeof g && (h = g(b, d));
            if (c.total = h, d.paging) {
                var k = Math.ceil( + h / c.limit);
                c.updataPaging(k, c.currentPage),
                d.pagingInfo && c.updatePagingInfo(c.currentPage, c.limit, f, h)
            }
        },
        createPaging: function(b, c) {
            var d = this,
            e = d.options.paging,
            f = a("<div></div>"),
            g = ["first", "prev", "next", "last"],
            h = this.getPagingBtns(b, c);
            a.each(g,
            function(b, e) {
                2 == b && a.each(h,
                function(a, b) {
                    f.append(d.createPagingDom(b, c))
                }),
                f.append(d.createPagingDom(e))
            }),
            c < 2 && f.children().filter(function(b) {
                if (a(this).hasClass(e.firstClass) || a(this).hasClass(e.prevClass)) return ! 0
            }).addClass(e.disabledClass),
            d.currentPage >= d.totalPages && f.children().filter(function(b) {
                if (a(this).hasClass(e.nextClass) || a(this).hasClass(e.lastClass)) return ! 0
            }).addClass(e.disabledClass),
            d.$paging.find("ul").empty().append(f.children()),
            this.setPagingType()
        },
        getPagingBtns: function(a, b) {
            var c = this,
            d = Math.min(c.options.paging.visiblePages, a),
            e = a,
            f = b,
            g = Math.floor(d / 2),
            h = 0,
            i = 0,
            j = [];
            if (0 == e) return j;
            h = f - g + 1 - d % 2,
            i = f + g,
            h <= 0 && (h = 1, i = d),
            i > e && (h = e - d + 1, i = e);
            for (var k = h; k <= i; k++) j.push(k);
            return c.options.paging.ellipsis && d >= 7 && e > d && (1 == j[0] ? (j[j.length - 1] = e, j[j.length - 2] = "more") : j[j.length - 1] == e ? (j[0] = 1, j[1] = "more") : (j[0] = 1, j[1] = "more", j[j.length - 1] = e, j[j.length - 2] = "more")),
            j
        },
        createPagingDom: function(b, c) {
            var d = this.options.paging,
            e = a("<li></li>"),
            f = a('<a href="javacript:;"></a>');
            return isNaN(b) ? (e.addClass(d[b + "Class"]), f.text(d[b])) : (b == c && e.addClass(d.activeClass), e.addClass(d.pageClass), f.text(b)),
            e.append(f)
        },
        setPagingType: function() {
            var b = this.options.paging,
            c = this.$paging.find("ul");
            switch (b.pagingType) {
            case "full_numbers":
                break;
            case "simple_numbers":
                c.find("li").filter(function() {
                    if (a(this).hasClass(b.firstClass) || a(this).hasClass(b.lastClass)) return ! 0
                }).remove();
                break;
            case "full":
                c.find("li").filter(function() {
                    if (a(this).hasClass(b.pageClass) || a(this).hasClass(b.moreClass)) return ! 0
                }).remove();
                break;
            case "simple":
                c.find("li").filter(function() {
                    if (a(this).hasClass(b.firstClass) || a(this).hasClass(b.lastClass) || a(this).hasClass(b.pageClass) || a(this).hasClass(b.moreClass)) return ! 0
                }).remove();
                break;
            case "numbers":
                c.find("li").filter(function() {
                    if (a(this).hasClass(b.firstClass) || a(this).hasClass(b.lastClass) || a(this).hasClass(b.prevClass) || a(this).hasClass(b.nextClass)) return ! 0
                }).remove()
            }
        },
        updataPaging: function(a, b) {
            var c = this;
            c.totalPages = a,
            c.currentPage = b,
            a < b && (0 == a ? c.currentPage = 1 : c.currentPage = c.totalPages + 1),
            this.createPaging(c.totalPages, c.currentPage)
        },
        updatePagingInfo: function(a, b, c, d) {
            var e = this,
            f = e.options,
            g = f.pagingInfo,
            h = g.pagingInfoText,
            i = (a - 1) * b + 1,
            j = i + Math.min(c.length, b) - 1;
            0 == c.length && (i = 0, j = 0),
            h = h.replace("{{start}}", i),
            h = h.replace("{{end}}", j),
            h = h.replace("{{total}}", d),
            e.$pagingInfo.find("span").text(h)
        },
        bindPagingEvent: function() {
            var b = this,
            c = b.options.paging;
            b.$paging.find("ul").on("click", "li",
            function(d) {
                var e = a(this),
                f = e.text();
                if (e.hasClass(c.disabledClass) || b.currentPage == f) return ! 1;
                switch (!0) {
                case e.hasClass(c.firstClass):
                    f = 1;
                    break;
                case e.hasClass(c.prevClass):
                    f = b.currentPage - 1;
                    break;
                case e.hasClass(c.pageClass):
                    f = e.text();
                    break;
                case e.hasClass(c.nextClass):
                    f = b.currentPage < 1 ? 1 : b.currentPage + 1;
                    break;
                case e.hasClass(c.lastClass):
                    f = 0 == b.totalPages ? 1 : b.totalPages;
                    break;
                case e.hasClass(c.moreClass):
                    f = e.next().text() == b.totalPages ? Number(e.prev().text()) + 1 : Number(e.next().text()) - 1
                }
                return b.currentPage = +f,
                b.loadData( + f),
                !1
            })
        },
        bindPageLengthEvent: function() {
            var b = this;
            b.$pageLength.find("select").change(function(c) {
                b.limit = +a(this).val(),
                b.loadData(1)
            })
        },
        renderTable: function(b) {
            var c = this,
            d = c.options,
            e = d.sort,
            f = d.columns,
            g = c.$table,
            h = g.find("thead th"),
            i = a("<tbody></tbody>"),
            j = (a("<div></div>"), a("<tr></tr>"));
            e && a.each(f,
            function(b, c) {
                c.field && (a(h[b]).removeClass(e.noneClass + " " + e.descClass + " " + e.ascClass), void 0 === c.sort || c.sort === !0 ? a(h[b]).addClass(e.noneClass) : "desc" == c.sort ? a(h[b]).addClass(e.descClass) : "asc" == c.sort && a(h[b]).addClass(e.ascClass))
            }),
            0 == b.length ? (j.addClass(d.oddClass).append('<td class="' + d.td_emptyClass + '" colspan="' + f.length + '">' + d.emptyText + "</td>"), i.append(j)) : a.each(b,
            function(b, e) {
            	//debugger
                var g = j.clone();
            	var timer = null;
                a.each(f,
                function(a, d) {
                    g.append(c.createTbodyTD(b, a, e, d))
                }),
                b % 2 != 0 ? g.addClass(d.oddClass) : g.addClass(d.evenClass),
                g.data("rowData", e),
                //绑定单击事件
                g.on("click",function(){
                	if(d.multiselect == true){
                		debugger
                		if(g.find("input").prop('checked')){
                			g.find("td").find("input").prop("checked",false);
                			//g.removeClass("b_table_sel");
                			g.css("background","");
                		}else{
                			g.find("td").find("input").prop("checked",true);
                			//g.addClass("b_table_sel");
                			g.css("background","#DFF0D8");
                		}
                		
                	}else{
                		if(g.find("input").prop('checked')){
                			g.find("td").find("input").prop("checked",false);
                			//g.removeClass("b_table_sel");
                			g.css("background","");
                		}else{
                			g.find("td").find("input").prop("checked",true);
                			//g.addClass("b_table_sel");
                			g.css("background","#DFF0D8");
                			var trss = g.prevAll('tr');
                			trss.each(function(i,oooo){
                				var $oooo = $(this);
                				$oooo.find("td").find("input").prop("checked",false);
                				$oooo.css("background","");
                			});
                			trss = g.nextAll('tr');
                			trss.each(function(i,oooo){
                				var $oooo = $(this);
                				$oooo.find("td").find("input").prop("checked",false);
                				$oooo.css("background","");
                			});
                			
                		}
                	}
                	clearTimeout(timer);
                	timer = setTimeout(function () { //在单击事件中添加一个setTimeout()函数，设置单击事件触发的时间间隔
                		"function" == typeof d.onClickRow && d.onClickRow.call(g, e, b, d)
                	}, 300);
                	
                }),//绑定双击事件
                g.on("dblclick",function(){
                	clearTimeout(timer);
                	"function" == typeof d.ondbClickRow && d.ondbClickRow.call(g, e, b, d)
                }),
                g.on("mousedown",function(event) {
                    console.log(e.which);
                    event.stopPropagation();
                    //右键为3
                    if (3 == event.which) {
                    	//debugger
                    	if(d.rightMenu == true){
                    		//屏蔽浏览器右键菜单
                            g.on("contextmenu", function(event){
                            	if(d.rightMenuctx != ""){
                            		//debugger
                                	$('#'+d.rightMenuctx).show(100); 
                                    $('#'+d.rightMenuctx).css({
                                    	'top':event.pageY+'px',
                                        'left':event.pageX+'px'
                                    });
                                    var as=$('#'+d.rightMenuctx).find("a");
                                    as.each(function(i,o){
                                    	var $o = $(this);
                                    	if(d.rightMenuEvent != undefined && d.rightMenuEvent.length > 0){
                                    		$.each( d.rightMenuEvent, function(index, content){ 
                                    			if(o.title == content.title){
                                    				$o.on("click",function(){
                                    					$('#'+d.rightMenuctx).hide(500);
                                    					eval(content.event+"(g, e, b)");
                                    				});
                                    			}
                                    		});
                                    	}
                                    });
                                }
                                return false;
                            });
                            
                    	}
                    	
                    } else if (1 == event.which) {
                    	if(d.rightMenu == true){
                    		if(d.rightMenuctx != ""){
                    			$('#'+d.rightMenuctx).hide(100);
                    		}
                    	}
                    }
                    return false;
                }),
                i.append(g),
                "function" == typeof d.rowCallback && d.rowCallback.call(g, e, b, d)
                
            }),
            g.children("tbody").remove().end().append(i),
            c.CurrentCount = b.length,
            "function" == typeof d.drawCallback && d.drawCallback.call(g, b, d)
        },
        createTbodyTD: function(b, c, d, e) {
        	//debugger
            var f = this,
            g = f.options,
            h = a("<td></td>"),
            i = e.tooltip;
            i === !0 ? h.data("title", d[e.field]) : (0 === i || i) && h.data("title", i),
            e.className && h.addClass(e.className),
            e.textAlign && h.css("text-align", e.textAlign),
            e.verticalAlign && h.css("vertical-align", e.verticalAlign);
            var j = g.sort,
            e = g.columns[c];
            if (j && ("asc" != e.sort && "desc" != e.sort || h.addClass(j.activeClass)), e.render) {
                var k = e.render.call(h, d, b, c, e, g);
                if ("object" == typeof k && null != k && k.jquery) h.append(k.clone(!0, !0));
                else if (null != k) {
                    k = String(k);
                    var l = k.match(/>/g),
                    m = k.match(/>/g);
                    l && m && l.length == m.length ? h.append(a(k)) : "" !== k && null != k && h.text(k)
                }
            } else if (e.field) {
                var n = d[e.field];
                "" !== n && null != n && h.text(n)
            }
            if (h.is(":empty") && e.defaultContent) if (e.defaultContent && e.defaultContent.jquery) h.append(e.defaultContent.clone(!0, !0));
            else {
                var o = String(e.defaultContent),
                l = o.match(/>/g),
                m = o.match(/>/g);
                l && m && l.length == m.length ? h.append(a(o)) : h.text(o)
            }
            return h
        },
        bindSortEvent: function() {
            var b = this;
            b.$table.children("thead").on("click", "th.sort",
            function() {
                b.sortThrottle(a(this))
            })
        },
        sortThrottle: function(b) {
            var c = this,
            d = c.options,
            e = d.columns,
            f = d.sort;
            clearTimeout(c.loadData.tId),
            c.loadData.tId = setTimeout(function() {
                var d = b.index();
                a.each(e,
                function(a, c) { (void 0 === c.sort || c.sort) && (a == d ? b.hasClass(f.noneClass) ? c.sort = "desc": b.hasClass(f.descClass) ? c.sort = "asc": b.hasClass(f.ascClass) && delete c.sort: delete c.sort)
                }),
                c.loadData(1)
            },
            c.options.sort.timeout)
        },
        bindTooltipEvent: function() {
            var b = this,
            c = d.$xjzTooltip;
            c || (c = d.$xjzTooltip = a("<div></div>"), a("body").append(c)),
            this.$table.on("mouseenter", "td,th",
            function(d) {
                var e = this;
                "number" == typeof e.title && (e.title = e.title.toString()),
                "number" == typeof a(e).data("title") && a(e).data("title", a(e).data("title").toString()),
                "number" == typeof a(e).data("xjzTooltip") && a(e).data("xjzTooltip", a(e).data("xjzTooltip").toString());
                var f = e.title || a(e).data("title") || a(e).data("xjzTooltip");
                if (a(e).data("bs.tooltip") || !(f || "string" == typeof f && f.length)) return ! 0;
                if (a(e).data("xjzTooltip", f).attr("title", ""), c.empty().removeClass().addClass(b.options.xjzTooltipWrapClass), f.jquery) c.append(f.clone(!0, !0));
                else {
                    if ("string" != typeof f) return ! 0;
                    var g = f.match(/>/g),
                    h = f.match(/>/g);
                    g && h && g.length == h.length ? c.append(a(f)) : c.text(f)
                }
                c.css({
                    top: d.pageY + 20 + "px",
                    left: d.pageX + 10 + "px"
                }).stop(!0, !0).show("fast")
            }).on("mouseleave click", "td,th",
            function() {
                a(this).data("xjzTooltip") && c.css("display", "none")
            }).on("mousemove", "td,th",
            function(b) {
                a(this).data("xjzTooltip") && c.css({
                    top: b.pageY + 20 + "px",
                    left: b.pageX + 10 + "px"
                })
            })
        },
        reload: function(b, c, d) {
            var e = this;
            b = void 0 !== b && b,
            c = void 0 !== c && c,
            d = void 0 === d || d;
            var f = 1;
            b === !1 ? f = e.currentPage: "number" == typeof b && (f = b <= 0 ? 1 : b),
            c === !0 ? a.each(this.options.columns,
            function(a, b) {
                b.sort && delete b.sort
            }) : "object" == typeof c && a.each(this.options.columns,
            function(a, b) { (void 0 === b.sort || b.sort) && (b.field == c.field ? b.sort = c.type: delete b.sort)
            }),
            e.loadData(f, d)
        },
        getTotalPages: function() {
            return this.totalPages
        },
        getTotal: function() {
            return this.total
        },
        getCurrentPage: function() {
            return this.currentPage
        },
        getCurrentCount: function() {
            return this.CurrentCount
        },
        getSelectObjs: function() {
        	var $sel = this;
        	var $table_sel = $sel.$table;
        	var opts_data = $sel.options.data;
        	var $trs = $table_sel.find("tbody").find("tr");
        	var retData = [];
        	$trs.each(function(i,o){
        		var $o = $(this);
        		if($o.find("input").prop('checked')){
        			retData.push(opts_data[i]);
        		}
        	});
        	debugger
            return retData;
        },
        destroy: function() {
            this._$table.replaceAll(this.$container)
        }
    },
    a.fn.extend({
        xjzTable: function(b) {//debugger
            return this.each(function(c, e) {
                a(e).data("xjzTable") ? a(e).data("xjzTable").reload() : b && a(e).data("xjzTable", new d(a(e), b))
            }),
            this
        }
    }),
    a.fn.xjzTable.options = {
        data: null,
        dataFilter: null,
        ajax: {
            type: "get",
            dataType: "json",
            cache: !1,
            startText: "start",
            limitText: "limit",
            pagingText: "paging",
            sendCallback: null,
            successCallback: null,
            dataSrc: "rows",
            totalSrc: "total",
            masklayer: !0
        },
        defColumns: {},
        columns: [],
        paging: {
            startPage: 1,
            visiblePages: 7,
            pagingType: "simple_numbers",
            ellipsis: !0,
            firstClass: "first",
            prevClass: "prev",
            nextClass: "next",
            lastClass: "last",
            moreClass: "more",
            pageClass: "page",
            activeClass: "active",
            disabledClass: "disabled",
            pagingClass: "pagination pagination-sm",
            wrapClass: "xjzTable-paging"
        },
        pagingInfo: {
            pagingInfoClass: "paging-info-sm",
            wrapClass: "xjzTable-paging-info"
        },
        pageLength: {
            pageLengthClass: "form-control input-sm",
            wrapClass: "xjzTable-paging-length",
            data: [10, 25, 50, 100]
        },
        defaultSize: 25,
        sort: {
            noneClass: "sort sort-none",
            ascClass: "sort sort-asc",
            descClass: "sort sort-desc",
            activeClass: "sort-active",
            timeout: 250
        },
        theadCallback: null,
        rowCallback: null,
        drawCallback: null,
        onClickRow:null,
        onRightClickRow:null,
        onDbClickRow:null,
        lang: "zh_CN",
        dom: "T<'pull-left'I><'pull-left'L><'pull-right'P>",
        evenClass: "even",
        oddClass: "odd",
        td_emptyClass: "td_empty",
        xjzTooltipWrapClass: "xjzTooltip",
        xjzTableWrapClass: "xjzTable-container clearfix",
        masklayer: {
            containerMasklayerClass: "xjzTable-container-masklayer",
            tableMasklayerClass: "xjzTable-table-masklayer"
        }
    },
    d.options = a.fn.xjzTable.options,
    d.lang = {
        zh_CN: {
            pagingText: {
                first: "首页",
                prev: "上一页",
                next: "下一页",
                last: "尾页",
                more: "..."
            },
            pagingInfoText: "第 {{start}} 到 {{end}} 条记录, 共 {{total}} 条",
            pageLengthText: "每页 {{select}} 条",
            emptyText: "没有相关记录"
        },
        zh_TW: {
            pagingText: {
                first: "首頁",
                prev: "上壹頁",
                next: "下壹頁",
                last: "尾頁",
                more: "..."
            },
            pagingInfoText: "第 {{start}} 到 {{end}} 條記錄, 共 {{total}} 條",
            pageLengthText: "每頁 {{select}} 條",
            emptyText: "沒有相關記錄"
        },
        en_US: {
            pagingText: {
                first: "First",
                prev: "Previous",
                next: "Next",
                last: "Next",
                more: "..."
            },
            pagingInfoText: "Showing {{start}} to {{end}} of {{total}} entries",
            pageLengthText: "Show {{select}} entries",
            emptyText: "No data available in table"
        }
    }
} (window.jQuery, window, document);